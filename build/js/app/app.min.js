"use strict";angular.element(document).ready(function(){if(window.location.hash==="#_=_")window.location.hash="#!";angular.bootstrap(document,["mycs"])});window.modules=[{module:"mycs.system",name:"system"},{module:"mycs.analizer",name:"analizer"},{module:"mycs.cache",name:"cache"}];var packageModules=[];for(var index in window.modules){angular.module(window.modules[index].module,window.modules[index].angularDependencies||[]);packageModules.push(window.modules[index].module)}var modules=["ngCookies","ngResource","ui.router"];modules=modules.concat(packageModules);angular.module("mycs",modules);"use strict";angular.module("mycs.analizer",[]);"use strict";angular.module("mycs.system",[]);"use strict";angular.module("mycs.cache").run(["$templateCache",function(a){a.put("analizer/views/perf.comparison.html","<div ng-controller=\"AnalizerController\" ng-init=\"loadData(['vk', 'facebook'])\">\n"+"	\n"+'	<mycs-perf-comparison-table data="performanceData"></mycs-perf-comparison-table>\n'+"\n"+"</div>");a.put("analizer/directives/perfComparisonTable/tpls/perfComparisonTable.html",'<div class="table-layout">\n'+" \n"+"    <table>\n"+"    	<thead>\n"+"\n"+"    		<th>\n"+"                <span>Variable</span>\n"+"    		</th>\n"+"            <th>\n"+"                <span>Value(\n"+'                    <a href="javascript:void(0)" ng-class="{active: ordering == \'min\'}" ng-click="changeOrdering(\'min\')">min</a>\n'+"                    &nbsp;/&nbsp;\n"+'                    <a href="javascript:void(0)" ng-class="{active: ordering == \'max\'}" ng-click="changeOrdering(\'max\')">max</a>\n'+"                )</span>\n"+"            </th>\n"+"            <th>\n"+"                <span>Average</span>\n"+"            </th>\n"+"            <th>\n"+"                <span>Website</span>\n"+"            </th>\n"+"\n"+"    	</thead>\n"+"        <tbody>\n"+"\n"+'            <tr ng-repeat="(metric, values) in metrics">\n'+"                <td>\n"+"                   <span>{{::metric}}</span> \n"+"                </td>\n"+"                <td>\n"+"                    <span>{{values[ordering][ordering]}}</span>\n"+"                </td>\n"+"                <td>\n"+"                    <span>{{values[ordering].average}}</span>\n"+"                </td>\n"+"                <td>\n"+"                    <span>{{values[ordering].site}}</span>\n"+"                </td>\n"+"            </tr>\n"+"\n"+"        </tbody>\n"+"    </table>\n"+"    \n"+"</div>")}]);"use strict";angular.module("mycs.system").config(["$stateProvider","$urlRouterProvider",function(a,b){b.otherwise("/")}]).config(["$locationProvider",function(a){a.hashPrefix("!")}]);"use strict";angular.module("mycs.analizer").config(["$stateProvider",function(a){a.state("homepage",{url:"/",templateUrl:"analizer/views/perf.comparison.html"})}]);"use strict";angular.module("mycs.analizer").controller("AnalizerController",["$scope","PerformanceData",function(a,b){a.loadData=function(c){b.load(c).then(function(b){a.performanceData=b},function(a){console.log(a)})}}]);"use strict";angular.module("mycs.analizer").factory("PerformanceData",["$resource","$q",function(a,b){var c=a("/data/:file",{file:"@file"},{load:{method:"GET",isArray:false}});return{load:function(a){var d=[],e;if(typeof a==="undefined"){e="You should pass json files to load"}else if(!a instanceof Array){e="Files list should be array"}else if(a.length!==2){e="You must pass exactly 2 files to compare"}if(e){throw new Error(e)}angular.forEach(a,function(a){d.push(c.load({file:a+".json"}).$promise)});return b.all(d)}}}]);"use strict";angular.module("mycs.analizer").directive("mycsPerfComparisonTable",[function(){return{scope:{data:"=data"},restrict:"E",templateUrl:"analizer/directives/perfComparisonTable/tpls/perfComparisonTable.html",link:function(a,b,c,d){var e=function(b){if(typeof b==="undefined")return;a.getSiteUrls();a.humanizeData()};a.sites=[];a.getSiteUrls=function(){angular.forEach(a.data,function(b){a.sites.push(b.runs[0].url)})};a.ordering="min";a.humanizeData=function(){var b={},c={};angular.forEach(a.data,function(b,d){angular.forEach(b.stats,function(b,e){b.site=a.sites[d];if(!c.hasOwnProperty(e)){c[e]=[b]}else{c[e].push(b)}})});angular.forEach(c,function(a,c){b[c]={};if(a[0].max-a[1].max>0){b[c].min=a[1];b[c].max=a[0]}else if(a[0].max-a[1].max<0){b[c].min=a[0];b[c].max=a[1]}else{b[c].min=a[0];b[c].min.average=" --- ";b[c].min.site="both";b[c].max=b[c].min}});a.metrics=b};a.changeOrdering=function(b){a.ordering=b};a.$watch("data",e)}}}]);
//# sourceMappingURL=app.min.js.map